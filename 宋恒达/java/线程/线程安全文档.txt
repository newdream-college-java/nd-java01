一.什么是进程？
进程就是系统中运行的一个程序，程序一旦运行就是进程。
进程可以看做程序执行的一个实例。是进行资源分配和调度的基本单位，每个进程都拥有独立的地址空间。
二.什么是线程？
线程是在程序执行过程中们可以执行一段程序代码的基本单位。
三.线程的状态？
	a.新建：新创建了一个线程对象
	b.可运行：线程对象创建后，其他线程调用了该对象的start()方法，该状态的线程位于可运行线程池中，等待线程调度选中，获取cpu的使用权
	c.运行：可运行状态的线程获得cpu的时间片后，执行某一段程序代码
	d.阻塞：运行中的线程因为某个原因放弃cpu的使用权，暂时停止运行
		1.等待阻塞：运行run()方法的线程调用wait()方法，JVM会把该线程放在等待队列中。
		2.同步阻塞：运行run()方法的线程获取对象的同步锁后，当有其它线程占用该对象的同步锁，则JVM会把该线程放到锁池中。
		3.其它阻塞：运行中的线程调用sleep或者join方法，或者发起I/O请求后，JVM会把该线程置于阻塞状态，当sleep超时或者join等待线程终止，
		或者I/O请求完成，该线程会重新置于运行状态。
	e.死亡：线程结束了它的生命周期，死亡的线程无法再次复生。
四.线程和进程之间的关系？
	a.一个程序至少包含一个进程
	b.一个进程至少包含一个线程
	c.并发：多个任务之间相互切换运行时间间隔较短，看着就像同时运行一样
	d.并行：多个任务同时运行（只有多核cpu才能实现）
五.是什么是线程安全？
	如果多个线程会同时运行，可能会运行同一段代码，其中运行后的结果和运行单线程的结果一样，而且其他变量的值和预期的值一样，就是线程安全的。
六.线程不安全的原因？
	a.并发访问
	b.共享资源
	c.多线程
七.解决线程不安全的方法？
	a.同步方法
	使用synchonized修饰的方法，叫做同步方法，保证A线程执行该方法的时候，其它线程只能在方法外等待
	b.同步代码块
	与同步方法在本质上一样的，但是同步代码块和同步方法在性能上都会比不用时降低一些，所以应该尽量减少synchorized修饰的作用域
	c.锁机制
	为了允许每个线程都能正常执行原子操作，java引入了线程同步机制最多允许一个线程拥有同步锁。Lock，性能比前面两种方法都有提高，更加体现了面向对象的思想。

