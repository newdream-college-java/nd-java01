一、自定义窗体类，自定义面板类，鱼类
        窗体对象，面板对象，鱼对象
        1、在窗体类建立一个窗体，设置宽高和一些基本属性
        2、在面板类继承JPanel得到一个新面板
添加面板和玩家鱼的时候比较顺利 没有遇到什么错误和报错，
 二、画背景（自定义面板 （组件））
    1.【优化1】----获取图片转为image对象代码
       1.1重复代码
       2.2每次都是从硬盘中读取图片，影响性能。（读磁盘耗时）        
    2. 所以新建一个FishUtil类鱼的工具类
    	1.1建立一个HashMap集合，在static方法里用循环将所有的图片放进集合当中，用鱼的文件名对应一张图片
       		 HashMap:文件名--->Image对象（图片对象）
       	1.2在面板类将背景图片画到面板中
  三、画玩家鱼
    1.Fish类至少需要 image和point属性
    	1.1先从工具类拿到玩家鱼的图片，将图片赋给玩家鱼
    	1.2设置玩家鱼初始位置居中，所以设置point属性的x，y轴为窗体宽高的一半
    2.【优化2】--使用常量类，定义项目中使用到的一些常量值
        2.1窗体的宽和高
        	创建一个Constan类，将常量放进类中
    3.玩家鱼是大图，怎么从大图中每次获取一个小图。
        办法：从大图中截取小图
         BufferedImage smallFishImg = bigFishImg.getSubimage(0, 0, 200, 180);
    4.【优化3】
        4.1 不是每次都是画第1张小图?
            Fish定义curIndex属性 表示当前的小图的下标，因为都是从第一张图片开始，设置初始值为0
        4.2  鱼小图的宽和高值不同鱼是不同的，如果不写死在程序中？
            1.为Fish定义width和height属性，type属性。
            2.将所有与的信息（小图宽，高  鱼类型）保存到常量中。
            	2.1在工具类创建一个Map集合，用type的值做为键，从而得到小图的宽高
            3.为设置它对应的小图的宽和高，还有类型。
     5.让鱼跟着鼠标光标
            5.1 实现MouseMotionAdapter适配器监听鼠标的移动。
            	先获取鼠标的坐标，当窗体启动后，设置玩家鱼的位置就是鼠标的位置
    
    6.鱼的游动
        6.1 线程
            6、1、1线程概念
                【进程 】运行的任务（应用）的过程。（动态的概念）
                    一个应用（软件），至少对应一个进程。
                    进程是计算机资源（内存，硬盘，cpu）分配的最小单位。
                    
                    新梦想每次开了一个班，开了一个进程（教室，投影仪，老师 桌子）。
                 【线程】进程中任务执行的最小单位。（进程中执行子任务的载体）
                    一个进程至少有一个线程。
                    
                    每一个班级的同学就是一个独立的线程。
                    
                    同学与同学之间：合作 、竞争
                        合作：线程的同步。
                        竞争：线程的互斥。
             6、1、2怎么查看当前应用的线程？？？
                方式一：Thread.currentThread().getName()     
                        Thread线程类的 currentThread()方法
                方式二：debug调试
             6、1、3创建线程的方式
                方式一：继承Thread线程类
                方式二：现实Runnable接口
                
             6、1、4  线程应用一：
                编写程序，描述吃10个苹果吃10梨子。
                要求1：先吃10个苹果 梨子吃完了才吃10梨子
                要求2：苹果和梨子交替吃，要求不要改吃苹果和吃梨子的代码。
         6、2      鱼游动的同时又要移动（吃苹果的时候，也能吃梨子）
            鱼的移动------main线程
            鱼的游动-----自定义线程中 
            
            补充：
                Thread.sleep(毫秒整数);  让当前线程休眠多少毫秒   
                    
         6、3【优化4】    每条鱼小图的数量是不同
                6.3.1 File定义count属性
                6.3.2 初始化鱼的时候，设置鱼的小图的数量  =大图的宽度/小图的宽度
                6.3.3 所有要使用小图数量的地方 getCount();
         6、5【优化5】 将鱼的图片进行缩放 
                 1.Fish定义一个属性level
                 2.将所有所有的比例放到FishUtil类的INFOS
                 3.绘制玩家鱼图片进行缩放
        7、鱼的掉头
            1.设置鱼的方向  向左:1   向右 -1
            2.当设置方向与原方向不同：改变其状态为turn，并根据状态切换图片
            3.掉头的图片只需要播放一轮(0-4)
       8、产生野鱼
       		1.现在面板类创建一个野鱼的数组
       		2.在工具类定义一个有参方法，参数为鱼的数组引用
       			2.1定义一个随机数，随机产生鱼的数量
       			2.2创建一个循环，循环里面创建一个随机数代表鱼的位置
       			2.3用循环将鱼的的图片，鱼的位置和所有属性初始化并赋值野鱼
       		3.在setMyFish方法里的到工具类所有的野鱼
       9、绘制野鱼
       		1.创建一个循环
       		2.循环里先得到鱼的图片和鱼的镜像图片
       		3.然后跟玩家鱼一样，将所有鱼绘制出来
       10、野鱼游动--与玩家鱼类似
       		1.1野鱼游动跟玩家鱼差不多，在线程方法里用循环将所有的野鱼小图播放就可以了
       11、野鱼移动
            1.为鱼设置targetPoint属性代表鱼的终点位置
            2.当鱼接近目标点（但是不能到达目标点，否则距离为0，异常）时，马上切换新的目标点
            3.在线程方法里实现鱼的移动
       12、野鱼掉头
            1.设置dir，根据开始位置与目标位置得到鱼的方向1或者-1
            2.根据鱼的方向用线程播放掉头的图片
            2.掉头鱼只会播放一轮，马上切换到swim图片
       13、玩家鱼吃野鱼
       		1.在鱼类定义一个方法，得到所有鱼的矩形
       		2.在监听器方法里定义一个矩形碰撞方法
       		3.当玩家鱼的矩形碰到野鱼的矩形，代表鱼被吃了
       		4.当野鱼被吃了之后，就不绘制野鱼的图片
       			野鱼被吃就有分数，鱼类定义个score分数，吃掉一个野鱼加一次分数
    	14、显示分数
    		1.在面板里绘制分数
    		2.设置字体颜色大小，将字体位置显示在左上角
    	15、吃完之后得到下一波鱼
    		1.当野鱼数量为0时
    		2.从工具类随机得到鱼，然后线程重绘
    	16、提示鱼吃完之后的数字
    		1.当夜鱼吃完之后，面板显示一串提示，表示下一波鱼即将到来
    		2.因为重绘每时每刻都在刷新，所有设置休眠时间，多重绘几次提示
    
    
    
    
    
    
    
    